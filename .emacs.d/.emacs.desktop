;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Tue Dec 24 01:09:29 2019
;; Desktop file format version 208
;; Emacs version 26.1

;; Global section:
(setq desktop-saved-frameset [frameset 1 (24065 43929 640613 876000) (desktop . "208") "al@al" nil nil ((((minibuffer . t) (undecorated) (override-redirect) (font-backend xft x) (font . "-PfEd-DejaVu Sans Mono-normal-normal-normal-*-13-*-*-*-m-0-iso10646-1") (font-parameter . "Monospace 10") (border-width . 0) (internal-border-width . 0) (right-divider-width . 0) (bottom-divider-width . 0) (vertical-scroll-bars) (horizontal-scroll-bars) (foreground-color . "#5f5f5f") (background-color . "#fdfde7") (mouse-color . "black") (border-color . "black") (screen-gamma) (line-spacing) (left-fringe . 8) (right-fringe . 8) (no-special-glyphs) (scroll-bar-foreground) (scroll-bar-background) (menu-bar-lines . 0) (tool-bar-lines . 0) (title) (wait-for-wm . t) (tool-bar-position . top) (inhibit-double-buffering) (icon-type . t) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 0) (scroll-bar-height . 0) (alpha) (no-focus-on-map) (no-accept-focus) (fullscreen) (visibility . t) (skip-taskbar) (z-group) (display-type . color) (background-mode . dark) (cursor-color . "#5f5f5f") (environment) (frameset--id . "A524-A1EE-2835-7C5E") (frameset--mini t . t) (frameset--text-pixel-height . 1046) (height . 61) (width . 238) (modeline . t) (unsplittable) (left . 1600) (top . 34) (icon-name) (display . ":0") (explicit-name)) ((min-height . 8) (min-width . 20) (min-height-ignore . 5) (min-width-ignore . 8) (min-height-safe . 2) (min-width-safe . 4) (min-pixel-height . 136) (min-pixel-width . 160) (min-pixel-height-ignore . 85) (min-pixel-width-ignore . 64) (min-pixel-height-safe . 34) (min-pixel-width-safe . 32)) vc (pixel-width . 1920) (pixel-height . 1029) (total-width . 240) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (hc (pixel-width . 1920) (pixel-height . 927) (total-width . 240) (total-height . 55) (normal-height . 0.8965014577259476) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 1432) (pixel-height . 927) (total-width . 179) (total-height . 55) (normal-height . 1.0) (normal-width . 0.7458333333333325) (buffer "linked_lists.c" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 316) (start . 1))) (leaf (last . t) (pixel-width . 488) (pixel-height . 927) (total-width . 61) (total-height . 55) (normal-height . 1.0) (normal-width . 0.25416666666666754) (buffer "*compilation*" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1) (start . 1)))) (leaf (last . t) (pixel-width . 1920) (pixel-height . 102) (total-width . 240) (total-height . 6) (normal-height . 0.10349854227405242) (normal-width . 1.0) (buffer "*eshell*" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 69) (start . 1)))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring nil)
(setq regexp-search-ring nil)
(setq register-alist nil)
(setq file-name-history '("/home/al/Documents/c_practice/lec8_structure/linked_lists.c"))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 208
  "/home/al/Documents/c_practice/lec8_structure/linked_lists.c"
  "linked_lists.c"
  'c-mode
  '(abbrev-mode visual-line-mode subword-mode undo-tree-mode global-auto-revert-mode override-global-mode flycheck-mode rainbow-delimiters-mode openwith-mode yas-minor-mode hungry-delete-mode beacon-mode auto-complete-mode which-key-mode text-scale-mode)
  316
  '(1 nil)
  nil
  nil
  '((buffer-display-time 24065 43926 719601 26000) (buffer-file-coding-system . undecided-unix) (overwrite-mode) (truncate-lines))
  '((mark-ring (1 1))))

