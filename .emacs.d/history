;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(grep-files-history xref--read-pattern-history compile-history irony--server-install-command-history org-tags-history input-method-history xref--read-identifier-history grep-regexp-history org-read-date-history search-ring buffer-name-history string-rectangle-history org-refile-history yes-or-no-p-history dired-regexp-history file-name-history query-replace-from-to-history ido-file-history minibuffer-history ido-buffer-history shell-command-history bookmark-history extended-command-history))
(setq grep-files-history '("all"))
(setq compile-history '("gcc -o everytihing main16.c main16_2.c " "gcc -c main16.c main16_2.c " "gcc -o main16 main16.c" "gcc -o main15 main15.c" "gcc -o main13 main13.c " "gcc -o main13 main13.c && ./main13" "gcc -o main12 main12.c && ./main12" "gcc -o main12 main12.c" "make flash" "gcc -o main11 main11.c"))
(setq irony--server-install-command-history '("cmake -DCMAKE_INSTALL_PREFIX\\=/home/al/.emacs.d/irony/  /home/al/.emacs.d/elpa/irony-20200130.849/server && cmake --build . --use-stderr --config Release --target install"))
(setq org-tags-history '("Buy" "Linux"))
(setq grep-regexp-history '("super j" "super n"))
(setq org-read-date-history '(" 11:00am    " "   11:00am    " "11:00am    " "5:00pm    " "11:00am+1    " "17:00+1    " "2:00pm+1    "))
(setq search-ring '("zoom" "include" "diff" "layout" "cycle" "cy" "cycle" "else {" "else { " "tile(Monitor " "static void setsmfact" "float smfacrt" "float sf" "Rule rules" "layout" "monoclelayout"))
(setq buffer-name-history '("dwm.c" "config.h" "dwm-6.0-smfact.diff" "config.h" "*Help*" "dwm.c" "useful_programming_notes.org" "config.mk" "config.def.h" "third_app" "src" "tabc.sh<bash_scripts>" "sxhkdrc" "MON_SEL.sh" "sxhkdrc" "tabc.sh<bash_scripts>" "backup.txt" "sxhkdrc" "index.html" "*Backtrace*" "main8.c" "point_main.c" "point_main" "*Ibuffer*" "main18.c" "sched_org.org" "useful_programming_notes.org" "*Help*" "main16_2.c" "sched_org.org" "main12.c" "*scratch*" "sxhkdrc" "sxhkdrc<2>" "dwm_volume.sh" "config.def.h" "config.mk" "config.h" "sxhkdrc" "*Packages*" "sxhkdrc" "monitor_setting" "MON_SEL.sh" "dynamic_desktop.sh" "sxhkdrc" "*eshell*" "work_table_light" "sched_org.org" "work_table_light" "Makefile" "main_color.c" "package.json" "node_modules" "keyword.js" "index.css" "src" "my-app" "package.json" "LICENSE" "react_practice" "README.md" "first-app" "src" "first.js" "*eshell*" ".projectile" "*Packages*" "javascript_practice" "forms.html" "html_practice" "class.html" "init.el" "sched_org.org" "CAPTURE-sched_org.org" "*scratch*" "main10.c" "main10.c~" "main_6.c" "orgcard.pd f" "orgcard.pdf" "orgcard.pdf " "CAPTURE-sched_org.org" "*scratch*" "*Custom Themes*" "not.txt" "*Customize Group: Emacs*" "autostart" "string_1.html" "useful_links_notes.org" "html_1.html" "autostart" "tabc" "javascript_practice" "sec.html" "*Async Shell Command*" "sec.html" "first.html" "*Async Shell Command*" ".projectile" "sched_org.org"))
(setq string-rectangle-history '("		" "	"))
(setq org-refile-history '("Currently Doing Tasks" "In Progress, Need to return to"))
(setq yes-or-no-p-history '("yes"))
(setq dired-regexp-history '("~"))
(setq file-name-history '("/home/al/dwm/dwm.c" "~/bin/" "~/.config/sxhkd/" "~/Documents/react_practice/third_react_example/index.js" "/home/al/Documents/react_practice/myfirstreact/src/App.js" "/home/al/Documents/c_practice/cprogramming_in_linux/tut20/main20.c" "/home/al/Documents/c_practice/pointer_prac/point_main.c" "/home/al/Documents/c_practice/pointer_prac/point_main" "/home/al/Dropbox/Sync/sched_org.org" "~/Dropbox/Sync/useful_programming_notes.org" "~/Documents/c_practice/tut16/main16_2.c" "~/Documents/c_practice/cprogramming_in_linux/tut12/main12.c" "/home/al/tabbed/tabbed.c" "/home/al/tabbed/LICENSE" "~/.config/sxhkd/" "~/bash_scripts/dynamic_desktop.sh" "~/Documents/Projects/first_blink/" "~/Documents/Projects/first_blink/main.c" "~/Documents/Projects/first_blink/" "~/Documents/react_practice/mysecondreact/src/index.css" "~/Documents/react_practice/mysecondreact/src/index.html" "~/Documents/react_practice/mysecondreact/src/index.js" "/home/al/Documents/react_practice/my-app/node_modules/ajv/lib/keyword.js" "/home/al/Documents/react_practice/my-app/node_modules/ajv/LICENSE" "~/Documents/react_practice/first-app/src" "~/Documents/react_practice/first-app/" "~/Documents/react_practice/first.html" "~/Documents/react_practice/first.js" "~/Documents/react_practice/" "~/Documents/react_practice/.projectile" "~/Documents/react_practice" "~/Documents/javascript_practice/class.html" "~/Documents/c_practice/cprogramming_in_linux/tut11/main11.c" "/home/al/Documents/c_practice/cprogramming_in_linux/tut20/main20.c" "/home/al/Documents/javascript_practice/compar.html" "~/Documents/javascript_practice/array.html" "~/Documents/javascript_practice/string_1.html" "~/Documents/javascript_practice/html.js" "/home/al/Documents/javascript_practice/string.js" "/home/al/Documents/javascript_practice/myscript.js" "/home/al/Documents/javascript_practice/object.js" "~/Documents/javascript_practice/" "~/Documents/javascript_practice/.projectile" "/home/al/.config/herbstluftwm/panel.sh" "/etc/xdg/herbstluftwm/panel.sh" "/home/al/Documents/javascript_practice/myscript.js" "~/Documents/javascript_practice/myscript.js" "~/Documents/javascript_practice/sec.html" "~/Documents/javascript_practice/first.html" "~/Documents/javascript_practice" "/home/al/Documents/herb_examples/savestate.sh" "/home/al/Documents/herb_examples/loadstate.sh" "~/Documents/html_practice/practice_with_git/" "/home/al/bash_scripts/monitor_setting/MON_SEL.sh" "/home/al/Documents/herb_keybind.txt" "/usr/share/xsessions/herbstluftwm.desktop" "/home/al/Documents/herb_keybind.txt" "/home/al/.config/herbstluftwm/autostart" "/home/al/.config/i3/config" "/home/al/Documents/herb_keybind.txt" "/home/al/Documents/html_practice/practice_with_git/st.css" "/tmp/style2.css" "/tmp/style1.css" "/home/al/Documents/html_practice/practice_with_git/st.css" "~/Documents/html_practice/practice_with_git/st.css" "/home/al/Documents/html_practice/practice_with_git/website_1.html" "~/Documents/html_practice/web_practice/practice_with_git/practice.html" "~/Documents/html_practice/web_practice/practice_with_git/" "~/Documents/html_practice/web_practice" "~/Documents/html_practice/web_project" "/home/al/.emacs.d/init.el" "~/.emacs.d/colors.el" "/home/al/.emacs.d/colors.el" "/home/al/bash_scripts/emacs_bg.sh" "~/bash_scripts/emacs_bg.sh" "~/bash_scripts/emacs_xresource.sh" "~/bash_scripts/xresource_emacs_theme.sh" "~/.emacs.d/elpa/xresources-theme-20190108.1851/xresources-theme.el" "/home/al/.Xresources" "~/" "/home/al/.cache/wal/colors.Xresources" "~/.Xresources" "/home/al/.Xresources"))
(setq ido-file-history '("." "dwm.c" "." nil "App.js" "." "main20.c" "." "point_main.c" "point_main" "." "sched_org.org" "." nil "." nil "." nil "." "tabbed.c" "." "LICENSE" "." nil "." nil "." nil "." nil "." "keyword.js" "LICENSE" "." nil "." nil "." nil "." "main20.c" "." "compar.html" "." nil "." nil "." nil "." "string.js" "." "myscript.js" "." "object.js" nil "." nil "panel.sh" nil "." "myscript.js" nil "." nil "." nil "." "savestate.sh" "loadstate.sh" "herb_examples/" "." "herb_examples/" "." "MON_SEL.sh" "." "herb_keybind.txt" "herbstluftwm.desktop" "." "herb_keybind.txt" "autostart" "config" "herb_keybind.txt" "st.css" "." "st.css" "." "st.css" "." nil "." "website_1.html" "." "init.el" "." "colors.el" "." "emacs_bg.sh" "." nil))
(setq minibuffer-history '("70" "#" "xfce4-terminal" "third_react_example/index.js" "~/Documents/react_practice/" "15" "third_react_example/index.html" "myfirstreact/src/App.js" "react_html/index.html" "mysecondreact/src/index.css" "~/Documents/react_practice/" "cprogramming_in_linux/tut19/main19.c" "~/Documents/c_practice/" "int main(argc, argv) { ... }" "cprogramming_in_linux/tut19/main19.c" "int main(argc, argv) { ... }" "tut18/main18.c" "useful_programming_notes.org" "int main(argc, argv) { ... }" "#include <...>" "tut17/main17.c" "int main(argc, argv) { ... }" "tut13/main13.c" "tut16/main.c" "tut15/main15.c" "~/Documents/c_practice/" "int main(argc, argv) { ... }" "tut15/main15.c" "cprogramming_in_linux/tut12/main12.c" "int main(argc, argv) { ... }" "tut13/main13.c" "~/Documents/c_practice/" "int main(argc, argv) { ... }" "cprogramming_in_linux/tut11/main11.c" "~/Documents/c_practice/" "# " "super n" "#" "int main(argc, argv) { ... }" "myfirstreact" "react_practice" "xfce4-terminal" "my-app/package.json" "~/Documents/react_practice/" "#" "./my-app/src/index.css" "64" "xfce4-terminal" "my-app/README.md" "~/Documents/react_practice/" "xfce4-terminal" "./my-app/README.md" "~/Documents/react_practice/" "tide" "forms.html" "~/Documents/javascript_practice/" "Downloads" "#" "int main(argc, argv) { ... }" "cprogramming_in_linux/tut20/main20.c" "~/Documents/c_practice/" "cprogramming_in_linux/tut_#6/main_6.c" "~/Documents/c_practice/" "dabbrev-expand" "throw_error.html" "~/Documents/javascript_practice/" "useful_links_notes.org" "forloop.html" "~/Documents/javascript_practice/" "array.html" "~/Documents/javascript_practice/" "html.js" "~/Documents/javascript_practice/" "~/Documents/html_practice/" "#" "javascript_practice" "~/Documents/javascript_practice/" "#" "object.html" "~/Documents/javascript_practice/" "#" "practice_with_git/website_1.html" "~/Documents/html_practice/" "practice_with_git/website_1.html" "~/Documents/html_practice/" "practice_with_git/website_1.html" "~/Documents/html_practice/" "herbstluft_config" "practice_with_git/website_1.html" "~/Documents/html_practice/" "practice_with_git/website_1.html" "~/Documents/html_practice/" "practice_with_git/st.css" "practice_with_git/website_1.html" "~/Documents/html_practice/" "practice_with_git/website_1.html" "~/Documents/html_practice/" "practice_with_git/website_1.html" "~/Documents/html_practice/" "practice_with_git/website_1.html"))
(setq ido-buffer-history '("dwm.c" "config.h" "dwm-6.0-smfact.diff" "config.h" "*Help*" "dwm.c" "useful_programming_notes.org" "config.mk" "config.def.h" "third_app" "src" "tabc.sh<bash_scripts>" "sxhkdrc" "MON_SEL.sh" "sxhkdrc" "tabc.sh<bash_scripts>" "backup.txt" "sxhkdrc" "index.html" "*Backtrace*" "main8.c" "point_main.c" "point_main" "*Ibuffer*" "main18.c" "sched_org.org" "useful_programming_notes.org" "*Help*" "main16_2.c" "sched_org.org" "main12.c" "*scratch*" "sxhkdrc" "sxhkdrc<2>" "dwm_volume.sh" "config.def.h" "config.mk" "config.h" "sxhkdrc" "*Packages*" "sxhkdrc" "monitor_setting" "MON_SEL.sh" "dynamic_desktop.sh" "sxhkdrc" "*eshell*" "work_table_light" "sched_org.org" "work_table_light" "Makefile" "main_color.c" "package.json" "node_modules" "keyword.js" "index.css" "src" "my-app" "package.json" "LICENSE" "react_practice" "README.md" "first-app" "src" "first.js" "*eshell*" ".projectile" "*Packages*" "javascript_practice" "forms.html" "html_practice" "class.html" "init.el" "sched_org.org" "CAPTURE-sched_org.org" "*scratch*" "main10.c" "main10.c~" "main_6.c" "orgcard.pd f" "orgcard.pdf" "orgcard.pdf " "CAPTURE-sched_org.org" "*scratch*" "*Custom Themes*" "not.txt" "*Customize Group: Emacs*" "autostart" "string_1.html" "useful_links_notes.org" "html_1.html" "autostart" "tabc" "javascript_practice" "sec.html" "*Async Shell Command*" "sec.html" "first.html" "*Async Shell Command*" ".projectile" "sched_org.org"))
(setq shell-command-history '("tar -xzvf" "chmod 777" "chmod +x" "./main15 hello there how are you doing" "./main15 hello" "./main15" "./main13" "./main12" "surf" "./main11" "gcc -o main11 main11.c" "./main11" "surf" " > not.txt" "surf" "chmod + x" "chmod 777" "surf" "bgpape" "wall" "bgpape" "wall" "bash wall" "wall"))
(setq bookmark-history '("dwm" "useful_linux_commands.org" "useful_programming_notes.org" "sxhkdrc" "dwm" "Documents" "dwm" ".xprofile" "sxhkdrc" "background_pics" "sched_org.org" "background_pics" "sxhkdrc" ".xprofile" "sxhkdrc" "sched_org.org" "sxhkdrc" "bin" "sxhkdrc" "bin" "sxhkdrc" "bin" "sxhkdrc" "bin" "sxhkdrc" "bin" "sxhkdrc" "bin" "sxhkdrc" "bin" "sxhkdrc" "bin" "sxhkdrc" "bin" "sxhkdrc" "bin" "sxhkdrc" "bin" "bash_scripts" "sxhkdrc" "bash_scripts" "sxhkdrc" "init.el" "sched_org.org" "c_practice" "sched_org.org" "init.el" "sched_org.org" "sxhkdrc" "react_practice" "sxhkdrc" "bash_scripts" "sxhkdrc" "useful_linux_commands.org" "bash_scripts" "sxhkdrc" "bash_scripts" "bspwmrc" "sxhkdrc" "useful_linux_commands.org" "sxhkdrc" "Git_Projects" "sched_org.org" "init.el" "Git_Projects" "sched_org.org" "useful_links_notes.org" "sched_org.org" "javascript_practice" "sxhkdrc" "bash_scripts" "sxhkdrc" "sched_org.org" "javascript_practice" "init.el" "html_practice" "init.el" "sched_org.org" "Documents" "sched_org.org" "~" "Documents" "herbstluft_config" "init.el" "javascript_practice" "sched_org.org" "javascript_practice" "sxhkdrc" "init.el" "sched_org.org" "c_practice" "useful_links_notes.org" "Documents" "init.el" "sched_org.org" "herbstluft_config" "Sync" "sched_org.org" "herbstluft_config" "sched_org.org"))
(setq extended-command-history '("rainbow-mode" "goto-line" "clone-indirect-buffer" "dmenu" "goto-line" "emmet-mode" "bookmark-save" "customize-themes" "compile" "eval-buffer" "compile" "eval-buffer" "compile" "calendar-goto-today" "compile" "smex-where-is" "clone-indirect-buffer-other-window" "smex-where-is" "fzf-git-files" "fzf" "list-packages" "projectile-ripgrep" "rgrep" "compile" "eshell" "eval-buffer" "eshell" "emmet-mode" "org-change-tag-in-region" "emmet-mode" "bookmark-save" "dmenu" "goto-line" "dmenu" "customize-themes" "eshell" "projectile-add-known-project" "eval-buffer" "list-packages" "eval-buffer" "eval\\" "package-install" "emmet-mode" "eval-buffer" "bookmark-save" "emmet-mode" "eval-buffer" "compile" "irony-install-server" "org-timer-stop" "org-timer" "customize-themes" "org-agenda" "org-change-tag-in-region" "org-agenda" "org-tags-columns" "org-change-tag-in-region" "indent-region" "customize-themes" "eval-buffer" "dabbrev-expand" "customize-themes" "customize" "emmet-mode" "bookmark-save" "emmet-mode" "customize-themes" "emmet-mode" "bookmark-save" "emmet-mode" "customize-themes" "projectile-add-known-project" "eshell" "ini`" "eshell" "eval-buffer" "org-agenda" "eval-buffer" "emacs-init-time" "eval-buffer" "eshell" "html-mode" "js2-mode" "reindent-then-newline-and-indent" "html-mode" "js2-mode" "emmet-mode" "eshell" "customize-themes" "peep-dired" "customize-themes" "eshell" "peep-dired" "projectile-ripgrep" "emmet-mode" "eshell" "customize-themes" "rainbow-mode" "revert-buffer" "eshell"))
