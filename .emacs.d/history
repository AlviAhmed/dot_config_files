;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(compile-history irony--server-install-command-history org-tags-history input-method-history xref--read-identifier-history grep-regexp-history org-read-date-history search-ring buffer-name-history string-rectangle-history org-refile-history yes-or-no-p-history dired-regexp-history file-name-history query-replace-from-to-history ido-file-history minibuffer-history ido-buffer-history shell-command-history bookmark-history extended-command-history))
(setq compile-history '("gcc -o main11 main11.c"))
(setq irony--server-install-command-history '("cmake -DCMAKE_INSTALL_PREFIX\\=/home/al/.emacs.d/irony/  /home/al/.emacs.d/elpa/irony-20200130.849/server && cmake --build . --use-stderr --config Release --target install"))
(setq org-tags-history '("Buy" "Linux"))
(setq org-read-date-history '("2:00pm+1    "))
(setq search-ring '("M-j" "unset" "M-j" "programming" "Buy" "org" "M" "outrub" "cycle" "gaps" "Documents" "bill" "usefule" "document.write" "max" "space"))
(setq buffer-name-history '("*scratch*" "main10.c" "main10.c~" "main_6.c" "orgcard.pd f" "orgcard.pdf" "orgcard.pdf " "CAPTURE-sched_org.org" "*scratch*" "*Custom Themes*" "not.txt" "*Customize Group: Emacs*" "autostart" "string_1.html" "useful_links_notes.org" "html_1.html" "autostart" "tabc" "javascript_practice" "sec.html" "*Async Shell Command*" "sec.html" "first.html" "*Async Shell Command*" ".projectile" "sched_org.org" "tabc" "sched_org.org" "panel.sh" "autostart" "sched_org.org" "random_capture.org" "Sync" "random_capture.org" "init.el" "*Async Shell Command*" "*Async Shell Command*<2>" "first.html" "*eshell*" "website_1.html" "sxhkdrc" "security_prompt.sh" "herb_examples" "autostart" "*eshell*" "herb_examples" "background_pics" "*Async Shell Command*" "*scratch*" ".xprofile" "autostart" "sxhkdrc" "useful_linux_commands.org" "herb_keybind.txt" "*eshell*" "website_1.html" "*eshell*" "website_1.html" "practice_with_git" "st.css" "style2.css" "style1.css" "*Ediff Control Panel*" "style2.css" "style1.css" "*Ediff Control Panel*" "style2.css" "style1.css" "scratch_2" "*eshell*" "*Async Shell Command*" "st.css"))
(setq string-rectangle-history '("	"))
(setq org-refile-history '("Currently Doing Tasks" "In Progress, Need to return to"))
(setq yes-or-no-p-history '("yes"))
(setq dired-regexp-history '("~"))
(setq file-name-history '("~/Documents/c_practice/cprogramming_in_linux/tut11/main11.c" "/home/al/Documents/c_practice/cprogramming_in_linux/tut20/main20.c" "/home/al/Documents/javascript_practice/compar.html" "~/Documents/javascript_practice/array.html" "~/Documents/javascript_practice/string_1.html" "~/Documents/javascript_practice/html.js" "/home/al/Documents/javascript_practice/string.js" "/home/al/Documents/javascript_practice/myscript.js" "/home/al/Documents/javascript_practice/object.js" "~/Documents/javascript_practice/" "~/Documents/javascript_practice/.projectile" "/home/al/.config/herbstluftwm/panel.sh" "/etc/xdg/herbstluftwm/panel.sh" "/home/al/Documents/javascript_practice/myscript.js" "~/Documents/javascript_practice/myscript.js" "~/Documents/javascript_practice/sec.html" "~/Documents/javascript_practice/first.html" "~/Documents/javascript_practice" "/home/al/Documents/herb_examples/savestate.sh" "/home/al/Documents/herb_examples/loadstate.sh" "~/Documents/html_practice/practice_with_git/" "/home/al/bash_scripts/monitor_setting/MON_SEL.sh" "/home/al/Documents/herb_keybind.txt" "/usr/share/xsessions/herbstluftwm.desktop" "/home/al/Documents/herb_keybind.txt" "/home/al/.config/herbstluftwm/autostart" "/home/al/.config/i3/config" "/home/al/Documents/herb_keybind.txt" "/home/al/Documents/html_practice/practice_with_git/st.css" "/tmp/style2.css" "/tmp/style1.css" "/home/al/Documents/html_practice/practice_with_git/st.css" "~/Documents/html_practice/practice_with_git/st.css" "/home/al/Documents/html_practice/practice_with_git/website_1.html" "~/Documents/html_practice/web_practice/practice_with_git/practice.html" "~/Documents/html_practice/web_practice/practice_with_git/" "~/Documents/html_practice/web_practice" "~/Documents/html_practice/web_project" "/home/al/.emacs.d/init.el" "~/.emacs.d/colors.el" "/home/al/.emacs.d/colors.el" "/home/al/bash_scripts/emacs_bg.sh" "~/bash_scripts/emacs_bg.sh" "~/bash_scripts/emacs_xresource.sh" "~/bash_scripts/xresource_emacs_theme.sh" "~/.emacs.d/elpa/xresources-theme-20190108.1851/xresources-theme.el" "/home/al/.Xresources" "~/" "/home/al/.cache/wal/colors.Xresources" "~/.Xresources" "/home/al/.Xresources"))
(setq ido-file-history '(nil "." "main20.c" "." "compar.html" "." nil "." nil "." nil "." "string.js" "." "myscript.js" "." "object.js" nil "." nil "panel.sh" nil "." "myscript.js" nil "." nil "." nil "." "savestate.sh" "loadstate.sh" "herb_examples/" "." "herb_examples/" "." "MON_SEL.sh" "." "herb_keybind.txt" "herbstluftwm.desktop" "." "herb_keybind.txt" "autostart" "config" "herb_keybind.txt" "st.css" "." "st.css" "." "st.css" "." nil "." "website_1.html" "." "init.el" "." "colors.el" "." "emacs_bg.sh" "." nil "." nil "ac-js2-20190101.933/" "." ".Xresources" "wal/" "." "colors.Xresources" nil ".emacs.d/" ".Xresources" "." "wallpapers/" ".bashrc"))
(setq minibuffer-history '("int main(argc, argv) { ... }" "cprogramming_in_linux/tut20/main20.c" "~/Documents/c_practice/" "cprogramming_in_linux/tut_#6/main_6.c" "~/Documents/c_practice/" "dabbrev-expand" "throw_error.html" "~/Documents/javascript_practice/" "useful_links_notes.org" "forloop.html" "~/Documents/javascript_practice/" "array.html" "~/Documents/javascript_practice/" "html.js" "~/Documents/javascript_practice/" "~/Documents/html_practice/" "#" "javascript_practice" "~/Documents/javascript_practice/" "#" "object.html" "~/Documents/javascript_practice/" "#" "practice_with_git/website_1.html" "~/Documents/html_practice/" "practice_with_git/website_1.html" "~/Documents/html_practice/" "practice_with_git/website_1.html" "~/Documents/html_practice/" "herbstluft_config" "practice_with_git/website_1.html" "~/Documents/html_practice/" "practice_with_git/website_1.html" "~/Documents/html_practice/" "practice_with_git/st.css" "practice_with_git/website_1.html" "~/Documents/html_practice/" "practice_with_git/website_1.html" "~/Documents/html_practice/" "practice_with_git/website_1.html" "~/Documents/html_practice/" "practice_with_git/website_1.html" "~/Documents/html_practice/" "practice_with_git/website_1.html" "~/Documents/html_practice/" "first.html" "~/Documents/html_practice/" "website_git_practice/first.html" "~/Documents/html_practice/" "web_practice/practice_with_git/first_cont.html" "~/Documents/html_practice/" "first_cont.html" "~/Documents/html_practice/" "emacs_bg.sh" "toggle_emacs_theme.sh" "~/bash_scripts/" "# " "emacs_bg.sh" "~/bash_scripts/" "MON_SEL.sh" "~/bash_scripts/monitor_setting/" "toggle_emacs_theme.sh" "~/bash_scripts/" "#" "dotfile_backup.sh" "~/bash_scripts/" "dotfile_backup.sh" "~/bash_scripts/" "setting_wallpaper.sh" "~/bash_scripts/"))
(setq ido-buffer-history '("*scratch*" "main10.c" "main10.c~" "main_6.c" "orgcard.pd f" "orgcard.pdf" "orgcard.pdf " "CAPTURE-sched_org.org" "*scratch*" "*Custom Themes*" "not.txt" "*Customize Group: Emacs*" "autostart" "string_1.html" "useful_links_notes.org" "html_1.html" "autostart" "tabc" "javascript_practice" "sec.html" "*Async Shell Command*" "sec.html" "first.html" "*Async Shell Command*" ".projectile" "sched_org.org" "tabc" "sched_org.org" "panel.sh" "autostart" "sched_org.org" "random_capture.org" "Sync" "random_capture.org" "init.el" "*Async Shell Command*" "*Async Shell Command*<2>" "first.html" "*eshell*" "website_1.html" "sxhkdrc" "security_prompt.sh" "herb_examples" "autostart" "*eshell*" "herb_examples" "background_pics" "*Async Shell Command*" "*scratch*" ".xprofile" "autostart" "sxhkdrc" "useful_linux_commands.org" "herb_keybind.txt" "*eshell*" "website_1.html" "*eshell*" "website_1.html" "practice_with_git" "st.css" "*Ediff Control Panel*" "style1.css" "scratch_2" "*eshell*" "*Async Shell Command*" "st.css" "*Custom Themes*" "sxhkdrc" ".xprofile" "st.css" "*eshell*<2>" "website_1.html" "st.css" "website_1.html" "bspwmrc" ".xprofile" "website_1.html" "practice_with_git" "website_1.html" "practice_with_git" "website_1.html" "st.css" "website_1.html" "st.css" "*Async Shell Command*" "website_1.html" "first_cont.html" "*eshell*" "first.html" "first_cont.html<practice_with_git>" "practice_with_git" "practice.html" "*Custom Themes*" "first_cont.html<practice_with_git>" "*Custom Themes*" "c_practice" "*Async Shell Command*" "background_pics" "*Async Shell Command*" "cyber_scene.png"))
(setq shell-command-history '("./main11" "gcc -o main11 main11.c" "./main11" "surf" " > not.txt" "surf" "chmod + x" "chmod 777" "surf" "bgpape" "wall" "bgpape" "wall" "bash wall" "wall"))
(setq bookmark-history '("init.el" "sched_org.org" "c_practice" "useful_links_notes.org" "Documents" "init.el" "sched_org.org" "herbstluft_config" "Sync" "sched_org.org" "herbstluft_config" "sched_org.org" "herbstluft_config" "javascript_practice" "herbstluft_config" "bin" "sxhkdrc" "herbstluft_config" "sxhkdrc" "Documents" "sxhkdrc" "Documents" "html_practice" "sched_org.org" "html_practice" "sxhkdrc" "bin" "sxhkdrc" "sched_org.org" "sxhkdrc" "bin" "bspwmrc" "init.el" ".xprofile" "polybar" "launch" "bspwmrc" "sxhkdrc" "sched_org.org" "sxhkdrc" "launch" "herbstluft_config" "sched_org.org" "init.el" "Sync" "init.el" "sched_org.org" "Sync" "init.el" "sched_org.org" "sxhkdrc" "herbstluft_config" "init.el" "sched_org.org" "sxhkdrc" "dwm" "background_pics" "herbstluft_config" "html_practice" "sched_org.org" "sxhkdrc" "herbstluft_config" "launch" "polybar" "bash_scripts" "herbstluft_config" "sxhkdrc" "herbstluft_config" "Documents" "background_pics" "bin" "init.el" "bash_scripts" "background_pics" "useful_linux_commands.org" "sxhkdrc" ".xprofile" "sxhkdrc" "herbstluft_config" "bash_scripts" "sched_org.org" ".xprofile" "sched_org.org" "herbstluft_config" "sched_org.org" "xsessions" "herbstluft_config" "monitor_setting" "herbstluft_config" "sxhkdrc" "useful_linux_commands.org" "sxhkdrc" "useful_linux_commands.org" "sched_org.org" ".xprofile" "sxhkdrc" "sched_org.org" ".bash_aliases" "sxhkdrc" ".xprofile"))
(setq extended-command-history '("eval-buffer" "compile" "irony-install-server" "org-timer-stop" "org-timer" "customize-themes" "org-agenda" "org-change-tag-in-region" "org-agenda" "org-tags-columns" "org-change-tag-in-region" "indent-region" "customize-themes" "eval-buffer" "dabbrev-expand" "customize-themes" "customize" "emmet-mode" "bookmark-save" "emmet-mode" "customize-themes" "emmet-mode" "bookmark-save" "emmet-mode" "customize-themes" "projectile-add-known-project" "eshell" "ini`" "eshell" "eval-buffer" "org-agenda" "eval-buffer" "emacs-init-time" "eval-buffer" "eshell" "html-mode" "js2-mode" "reindent-then-newline-and-indent" "html-mode" "js2-mode" "emmet-mode" "eshell" "customize-themes" "peep-dired" "customize-themes" "eshell" "peep-dired" "projectile-ripgrep" "emmet-mode" "eshell" "customize-themes" "rainbow-mode" "revert-buffer" "eshell" "ediff-buffers" "customize-themes" "ediff-buffers" "emmet-mode" "buf-move-up" "eshell" "customize-themes" "list-packages" "customize-themes" "emmet-mode" "clone-indirect-buffer" "customize-themes" "emmet-mode" "eshell" "customize-themes" "emmet-mode" "eshell" "emmet-mode" "eshell" "customize-themes" "eshell" "customize-themes" "eval-buffer" "customize-themes" "load-file" "customize-themes" "load-file" "customize-themes" "rainbow-mode" "update-file-autoloads" "rainbow-mode" "customize-themes" "revert-buffer" "eshell" "shell" "customize-themes" "list-packages" "rainbow-mode" "revert-buffer" "rainbow-mode" "list-packages" "eval-buffer" "list-packages" "customize-themes" "eval-buffer" "customize-themes"))
